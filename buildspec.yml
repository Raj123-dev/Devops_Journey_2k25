version: 0.2

env:
  variables:
    REPO_NAME: "hello-springboot-app"

phases:
  pre_build:
    commands:
      - echo Logging in to Docker Hub...
      - echo $DOCKERHUB_PASSWORD | docker login --username $DOCKERHUB_USERNAME --password-stdin

      # Generate unique IMAGE_TAG using timestamp + short commit hash
      - IMAGE_TAG=$(date +%Y%m%d%H%M%S)-$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - export IMAGE_TAG
      - echo "Using IMAGE_TAG=$IMAGE_TAG"

  build:
    commands:
      - echo Building the Maven project...
      - mvn -f Jenkins_Assignment_7/hello-springboot-app/pom.xml clean package
      - mvn clean package

      - echo Building the Docker image...
      - docker build --no-cache -t rajkashyap12/$REPO_NAME:$IMAGE_TAG -f Jenkins_Assignment_7/hello-springboot-app/Dockerfile Jenkins_Assignment_7/hello-springboot-app

      - echo Pushing Docker image to Docker Hub...
      - docker push rajkashyap12/$REPO_NAME:$IMAGE_TAG

  post_build:
    commands:
      - echo Updating Kubernetes manifest with new image tag...
      - export IMAGE_TAG=$IMAGE_TAG
      - envsubst < Jenkins_Assignment_7/hello-springboot-app/aws_deployment.yaml > final_deployment.yaml
      - cat final_deployment.yaml
      - echo Applying Kubernetes manifests to EKS...
      - aws eks update-kubeconfig --region $AWS_REGION --name $EKS_CLUSTER_NAME
      - kubectl delete pods -l app=hello-springboot-app || true
      - kubectl delete deployment hello-springboot-app || true
      - kubectl apply -f final_deployment.yaml
